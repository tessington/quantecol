source('~/Dropbox/Desktop/Rcode/quantecol/R/nicholson_bailey.R', echo=TRUE)
nicholson_bailey()
source('~/Dropbox/Desktop/Rcode/quantecol/R/nicholson_bailey.R', echo=TRUE)
source('~/Dropbox/Desktop/Rcode/quantecol/R/nicholson_bailey.R', echo=TRUE)
nicholson_bailey()
source('~/Dropbox/Desktop/Rcode/quantecol/R/nicholson_bailey.R', echo=TRUE)
nicholson_bailey()
source('~/Dropbox/Desktop/Rcode/quantecol/R/nicholson_bailey.R', echo=TRUE)
nicholson_bailey()
source('~/Dropbox/Desktop/Rcode/quantecol/R/nicholson_bailey.R', echo=TRUE)
nicholson_bailey()
source('~/Dropbox/Desktop/Rcode/quantecol/R/nicholson_bailey.R', echo=TRUE)
nicholson_bailey()
source('~/Dropbox/Desktop/Rcode/quantecol/R/nicholson_bailey.R', echo=TRUE)
nicholson_bailey()
nicholson_bailey(1.001)
source('~/Dropbox/Desktop/Rcode/quantecol/R/nicholson_bailey.R', echo=TRUE)
nicholson_bailey(1.001)
nicholson_bailey(1.01)
nicholson_bailey(1.05)
libary(devtools)
library(devtools)
help(document)
roxygen2::roxygenize()
browseVignettes("roxygen2")
usethis::use_package_doc()
library(quantecol)
help(quantecol)
help(quantecol)
library(quantecol)
help(quantecol)
library(devtools)
devtools::install_github("https://github.com/tessington/quantecol")
help(quantecol)
library(quantecol)
help(quantecol)
help(nicholson_bailey)
nicholson_bailey()
help(fig2.2)
library(devtools)
devtools::install_github("https://github.com/tessington/quantecol")
devtools::install_github("https://github.com/tessington/quantecol", force = TRUE)
library(quantecol)
help(quantecol)
library(quantecol)
help(quantecol)
help(par)
par()
rm(list = ls())
par()
library(settings)
settings::reset_par()
par()
library(quantecol)
help(quantecol)
library(quantecol)
help(quantecol)
source('~/Dropbox/Desktop/Rcode/quantecol/R/quantecol-package.R', echo=TRUE)
library(quantecol)
source('~/Dropbox/Desktop/Rcode/quantecol/R/quantecol-package.R', echo=TRUE)
help(quantecol)
library(quantecol)
help(quantecol)
library(quantecol)
fig4.1()
source('~/Dropbox/Desktop/Rcode/quantecol/R/fig4.1.R', echo=TRUE)
fig4.1()
source('~/.active-rstudio-document', echo=TRUE)
fig5.1()
libary(quantecol)
library(quantecol)
fig5.1()
fig5.1()
fig5.1()
fig5.1()
fig5.1()
fig5.1()
fig5.1()
fig5.1()
fig5.1()
fig5.1()
fig5.1()
20^1.05 * 10
10 * 20^1.05
1+b-d
.05 * 10 * 20^1.05
rm(list = ls()
)
source('~/.active-rstudio-document', echo=TRUE)
fig5.1()
1.05 * 10 * 20^1.05
1.05^20 * 10
source('~/.active-rstudio-document', echo=TRUE)
1.05^20 * 10
fig5.1()
fig5.1()
fig5.1()
fig5.1()
fig5.1()
fig5.1()
fig5.1()
fig5.1()
source('~/.active-rstudio-document', echo=TRUE)
fig5.1()
fig5.1()
fig5.1()
fig5.1()
fig5.1()
fig5.1()
fig5.1()
fig5.1()
fig5.1()
source('~/Dropbox/Desktop/Rcode/quantecol/R/fig5.1.R', echo=TRUE)
source('~/Dropbox/Desktop/Rcode/quantecol/R/fig5.1.R', echo=TRUE)
print(fig5.1)
source('~/.active-rstudio-document', echo=TRUE)
fig5.3()
source('~/.active-rstudio-document', echo=TRUE)
fig5.3()
source('~/.active-rstudio-document', echo=TRUE)
fig5.3()
source('~/.active-rstudio-document', echo=TRUE)
fig5.3()
run_model <- function(lambda_bar, range) {
Nt <- rep(NA,100)
Nt[1] <- N_0
lambda_t <- runif(100, min = lambda_bar - range, max = lambda_bar + range)
lambda_t <- lambda_t - mean(lambda_t)+1
for (i in 2:100) Nt[i] <- Nt[i-1]*lambda_t[i-1]
return(Nt)
}
output <- matrix(NA, nrow = 100000, ncol = 100)
lambda_bar <-1
N_0 <- 100
cols <- c("black", "gray80", "gray30")
plot(1:100, rep(N_0,100),
type = "l",
lwd = 2,
col = cols[1],
xlim = c(1,100),
xlab = "Years",
ylim = c(80, 110),
ylab = "Population Size",
las =1)
# repeat for range = 0.05
range <- 0.05
for (i in 1:100000) output[i,] <- run_model(lambda_bar, range)
Nt_avg <- colSums(output)
Nt_avg
run_model(lambda_bar, range)
source('~/.active-rstudio-document', echo=TRUE)
run_model(lambda_bar, range)
fig5.3()
# Add text to plot
text(x = 80, y  = 102,
text = expression(paste(lambda, "=1"))
pos = 4)
# Add text to plot
text(x = 80, y  = 102,
text = expression(paste("lambda", "=1"))
pos = 4)
# Add text to plot
text(x = 80, y  = 102,
text = expression(paste("lambda", "=1")),
pos = 4)
# Add text to plot
text(x = 80, y  = 102,
text = expression(paste(lambda, "=1")),
pos = 4)
help(text)
# Add text to plot
text(x = 80, y  = 102,
labels = expression(paste(lambda, "=1")),
pos = 4)
# Add text to plot
text.labels <- c(expression(paste(lambda["t"], "=1")),
expression(paste(0.95, "<",lambda["t"], "<",1.05)),
expression(paste(0.9, "<",lambda["t"], "<",1.10))
)
text(x = rep(80,3), y  = c(102, 98, 90),
labels = text.labels,
pos = 4)
source('~/.active-rstudio-document', echo=TRUE)
source('~/Dropbox/Desktop/Rcode/quantecol/R/fig5.3.R', echo=TRUE)
fig5.3()
help(text)
# Add text to plot
text.labels <- c(expression(paste(lambda["t"], "=1")),
expression(paste(0.95, "<",lambda["t"], "<",1.05)),
expression(paste(0.9, "<",lambda["t"], "<",1.10))
)
text(x = rep(100,3), y  = c(101, 98, 91),
labels = text.labels,
pos = 2)
text(x = rep(100,3), y  = c(101, 96, 85),
labels = text.labels,
pos = 2,
cex = 1.25)
text(x = rep(100,3), y  = c(101, 94, 84),
labels = text.labels,
pos = 2,
cex = 1.25)
text(x = rep(100,3), y  = c(101, 95, 84),
labels = text.labels,
pos = 2,
cex = 1.25)
source('~/Dropbox/Desktop/Rcode/quantecol/R/fig5.3.R', echo=TRUE)
fig5.3()
fig5.3()
help(viridis)
mu = log(1.05)
mu
sigma <-- 0.2
sigma <- 0.2
n.years <- 50
n.start <- 10
output <- matrix(NA, nrow = 20, ncol = n.years)
# stochastic model
for (i in 1:20) {
nt <- rep(NA, times = n.years)
nt[1] <- n.start
rs <- rnorm(n.years,mu, sd)
for (t in 2:n.years) nt[i] <- nt[i-1] * exp(rs[t-1])
output[,i] <- nt
}
rs <- rnorm(n.years,mu, sd)
rs <- rnorm(n.years,mu, sigma)
nt <- rep(NA, times = n.years)
nt[1] <- n.start
for (t in 2:n.years) nt[i] <- nt[i-1] * exp(rs[t-1])
rs
t
nt[t]
nt[t-1]
exp(rs[t-1])
for (t in 2:n.years) nt[i] <- nt[i-1] * exp(rs[t-1])
nt[i-1] * exp(rs[t-1])
nt[i-1]
for (t in 2:n.years) nt[i] <- nt[t-1] * exp(rs[t-1])
output[,i] <- nt
output <- matrix(NA, nrow = n.years, ncol = 20)
# stochastic model
for (i in 1:20) {
rs <- rnorm(n.years,mu, sigma)
nt <- rep(NA, times = n.years)
nt[1] <- n.start
for (t in 2:n.years) nt[i] <- nt[t-1] * exp(rs[t-1])
output[,i] <- nt
}
# make plot
ylim <- c(0, 120)
plot(1:n.years,
output[,1],
type = "l",
lwd =3,
col = cols[1]
xlab = "Years",
ylab = "Population Size",
xaxs = "i",
yaxs = "i",
ylim = ylim,
las = 1,
cex.lab = 1.25
)
plot(1:n.years,
output[,1],
type = "l",
lwd =3,
col = cols[1],
xlab = "Years",
ylab = "Population Size",
xaxs = "i",
yaxs = "i",
ylim = ylim,
las = 1,
cex.lab = 1.25
)
output[,1]
output <- matrix(NA, nrow = n.years, ncol = 20)
# stochastic model
for (i in 1:20) {
rs <- rnorm(n.years,mu, sigma)
nt <- rep(NA, times = n.years)
nt[1] <- n.start
for (t in 2:n.years) nt[i] <- nt[t-1] * exp(rs[t-1])
output[,i] <- nt
}
output[,1]
i=1
rs <- rnorm(n.years,mu, sigma)
nt <- rep(NA, times = n.years)
nt[1] <- n.start
# stochastic model
for (i in 1:20) {
rs <- rnorm(n.years,mu, sigma)
nt <- rep(NA, times = n.years)
nt[1] <- n.start
for (t in 2:n.years) nt[t] <- nt[t-1] * exp(rs[t-1])
output[,i] <- nt
}
# make plot
ylim <- c(0, 120)
plot(1:n.years,
output[,1],
type = "l",
lwd =3,
col = cols[1],
xlab = "Years",
ylab = "Population Size",
xaxs = "i",
yaxs = "i",
ylim = ylim,
las = 1,
cex.lab = 1.25
)
cols<-viridis::cviridis(20)
cols<- viridis::cividis
output <- matrix(NA, nrow = n.years, ncol = 20)
# stochastic model
for (i in 1:20) {
rs <- rnorm(n.years,mu, sigma)
nt <- rep(NA, times = n.years)
nt[1] <- n.start
for (t in 2:n.years) nt[t] <- nt[t-1] * exp(rs[t-1])
output[,i] <- nt
}
# make plot
ylim <- c(0, 120)
plot(1:n.years,
output[,1],
type = "l",
lwd =3,
col = cols[1],
xlab = "Years",
ylab = "Population Size",
xaxs = "i",
yaxs = "i",
ylim = ylim,
las = 1,
cex.lab = 1.25
)
cols
cols <- viridis::cividis
cols
cols <- viridis::cividis()
output <- matrix(NA, nrow = n.years, ncol = 20)
# stochastic model
for (i in 1:20) {
rs <- rnorm(n.years,mu, sigma)
nt <- rep(NA, times = n.years)
nt[1] <- n.start
for (t in 2:n.years) nt[t] <- nt[t-1] * exp(rs[t-1])
output[,i] <- nt
}
# make plot
ylim <- c(0, 120)
plot(1:n.years,
output[,1],
type = "l",
lwd =3,
col = cols[1],
xlab = "Years",
ylab = "Population Size",
xaxs = "i",
yaxs = "i",
ylim = ylim,
las = 1,
cex.lab = 1.25
)
cols
cols <- viridis::cividis(20)
cols
output <- matrix(NA, nrow = n.years, ncol = 20)
# stochastic model
for (i in 1:20) {
rs <- rnorm(n.years,mu, sigma)
nt <- rep(NA, times = n.years)
nt[1] <- n.start
for (t in 2:n.years) nt[t] <- nt[t-1] * exp(rs[t-1])
output[,i] <- nt
}
# make plot
ylim <- c(0, 120)
plot(1:n.years,
output[,1],
type = "l",
lwd =3,
col = cols[1],
xlab = "Years",
ylab = "Population Size",
xaxs = "i",
yaxs = "i",
ylim = ylim,
las = 1,
cex.lab = 1.25
)
for (i in 2:20) {
lines(1:n.years,
output[,i],
lwd = 3,
col = cols[i]
)
lines(1:n.years,
output[,i],
lwd = 3,
col = cols[i]
)}
# make plot
reset_graphics_par()
ylim <- c(0, 120)
plot(1:40,
output[1:40,1],
type = "l",
lwd =3,
col = cols[1],
xlab = "Years",
ylab = "Population Size",
xaxs = "i",
yaxs = "i",
ylim = ylim,
las = 1,
cex.lab = 1.25
)
for (i in 2:20) {
lines(1:40,
output[,i],
lwd = 3,
col = cols[i]
)
}
n.start <- 10
cols <- viridis::cividis(20)
output <- matrix(NA, nrow = n.years, ncol = 20)
# stochastic model
for (i in 1:20) {
rs <- rnorm(n.years,mu, sigma)
nt <- rep(NA, times = n.years)
nt[1] <- n.start
for (t in 2:n.years) nt[t] <- nt[t-1] * exp(rs[t-1])
output[,i] <- nt
}
# make plot
reset_graphics_par()
ylim <- c(0, 120)
plot(1:n.years,
output[,1],
type = "l",
lwd =3,
col = cols[1],
xlab = "Years",
ylab = "Population Size",
xaxs = "i",
yaxs = "i",
ylim = ylim,
las = 1,
cex.lab = 1.25
)
for (i in 2:20) {
lines(1:n.years,
output[,i],
lwd = 3,
col = cols[i]
)
}
sigma <- 0.05
n.years <- 40
n.start <- 10
cols <- viridis::cividis(20)
output <- matrix(NA, nrow = n.years, ncol = 20)
# stochastic model
for (i in 1:20) {
rs <- rnorm(n.years,mu, sigma)
nt <- rep(NA, times = n.years)
nt[1] <- n.start
for (t in 2:n.years) nt[t] <- nt[t-1] * exp(rs[t-1])
output[,i] <- nt
}
# make plot
reset_graphics_par()
ylim <- c(0, 120)
plot(1:n.years,
output[,1],
type = "l",
lwd =3,
col = cols[1],
xlab = "Years",
ylab = "Population Size",
xaxs = "i",
yaxs = "i",
ylim = ylim,
las = 1,
cex.lab = 1.25
)
for (i in 2:20) {
lines(1:n.years,
output[,i],
lwd = 3,
col = cols[i]
)
}
source('~/Dropbox/Desktop/Rcode/quantecol/R/fig5.4.R', echo=TRUE)
fig5.4()
fig5.4(sigma = 0.1)
fig5.4(sigma = 0.01)
library(quantecol)
help(fig5.1)
library(quantecol)
help(fig5.2)
print(fig5.1)
fig5.2()
fig5.3()
fig5.4()
